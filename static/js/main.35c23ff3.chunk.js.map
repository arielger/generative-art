{"version":3,"sources":["sketches/shader-1/index.js","sketches/noise-midi.js","App.js","sketches/noise.js","sketches/mouse.js","sketches/loop.js","sketches/blendMode.js","sketches/shapes.js","serviceWorker.js","index.js"],"names":["shader","simplex","SimplexNoise","configParams","frequency","value","range","amplitude","strokeWeight","backgroundFill","velocity","lines","color1","color2","CONFIGURATION_KNOB_RANGE","CONFIGURATION_VALUES_RANGE","handleMidiInput","p","message","data","command","knobNumber","configToChange","Object","keys","mappedValue","map","sketches","preload","loadShader","process","console","log","setup","createCanvas","windowWidth","windowHeight","WEBGL","windowResized","resizeCanvas","draw","rect","drawNoiseLine","lineIndex","time","lineYInterpolation","beginShape","index","lineXInterpolation","x","lerp","width","y","height","noise","noise3D","fromColor","color","toColor","stroke","lerpColor","vertex","endShape","navigator","requestMIDIAccess","then","midiAccess","inputs","values","onmidimessage","frameRate","background","noFill","millis","max","Math","floor","random","mouseX","mouseY","gridStartX","blockSize","gridStartY","push","translate","cellSize","rotate","atan2","line","pop","rectMode","CENTER","playhead","figures","anim","sin","PI","positiveAnim","noLoop","fill","blendMode","DIFFERENCE","ellipse","size","strokeJoin","ROUND","dim","min","triangle","App","React","useState","currentSketch","setCurrentSketch","useCallback","length","className","sketch","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.35c23ff3.chunk.js","sourcesContent":["// ðŸ“š Resources for this experiment\n\n// Getting started - shaders https://learnopengl.com/Getting-started/Shaders\n\nlet shader;\n\nexport default function sketch(p) {\n  p.preload = function () {\n    shader = p.loadShader(\n      `${process.env.PUBLIC_URL}/shaders/vertexShader.vert`,\n      `${process.env.PUBLIC_URL}/shaders/fragmentShader.frag`,\n      () => {\n        console.log(\"Success loading shaders\");\n      },\n      () => {\n        console.log(\"ERROR loading shaders\");\n      }\n    );\n  };\n\n  p.setup = function () {\n    p.createCanvas(p.windowWidth, p.windowHeight, p.WEBGL);\n  };\n\n  p.windowResized = function () {\n    p.resizeCanvas(p.windowWidth, p.windowHeight);\n  };\n\n  p.draw = function () {\n    p.shader(shader);\n    p.rect(0, 0, p.windowWidth, p.windowHeight);\n  };\n}\n","import SimplexNoise from \"simplex-noise\";\n\nconst simplex = new SimplexNoise();\n\n// ðŸ“š Resources for this experiment\n\n// What is OpenSimplex noise? -->  https://www.youtube.com/watch?v=Lv9gyZZJPE0\n// Perlin noise --> http://web.archive.org/web/20160530124230/http://freespace.virgin.net/hugo.elias/models/m_perlin.htm\n\nlet configParams = {\n  frequency: {\n    value: 0.5,\n    range: [0.5, 5],\n  },\n  amplitude: {\n    value: 0.05,\n    range: [0.05, 0.5],\n  },\n  strokeWeight: {\n    value: 0.2,\n    range: [0.2, 10],\n  },\n  backgroundFill: {\n    value: 255,\n    range: [255, 0],\n  },\n  velocity: {\n    value: 3000,\n    range: [3000, 100],\n  },\n  lines: {\n    value: 5,\n    range: [5, 20],\n  },\n  color1: {\n    value: 0,\n    range: [0, 1],\n  },\n  color2: {\n    value: 0,\n    range: [0, 1],\n  },\n};\n\n/* MIDI CONFIGURATION (using Impact LX88+ keyboard) */\n\nconst CONFIGURATION_KNOB_RANGE = [30, 37];\nconst CONFIGURATION_VALUES_RANGE = [0, 127];\nconst CONFIGURATION_COMMAND_CODE = 191;\n\nconst handleMidiInput = (p) => (message) => {\n  const [command, knobNumber, value] = message.data;\n\n  if (\n    command === CONFIGURATION_COMMAND_CODE &&\n    knobNumber >= CONFIGURATION_KNOB_RANGE[0] &&\n    knobNumber <= CONFIGURATION_KNOB_RANGE[1]\n  ) {\n    const configParamsKeys = Object.keys(configParams);\n    // Map knob number to 0 to n number\n    const knobIndex = knobNumber - CONFIGURATION_KNOB_RANGE[0];\n\n    // Automatically change config param based on configParams order\n    const configToChange = configParamsKeys[knobIndex];\n\n    // If there is no config for the knob just return\n    if (!configToChange) return;\n\n    // Map knob value (1 to 127) to variable config range\n    const mappedValue = p.map(\n      value,\n      ...CONFIGURATION_VALUES_RANGE,\n      ...configParams[configToChange].range\n    );\n    configParams[configToChange].value = mappedValue;\n  }\n};\n\n/******************/\n\nlet lineSteps = 200;\n\nexport default function sketch(p) {\n  p.drawNoiseLine = function ({\n    lineIndex,\n    lines,\n    time,\n    frequency,\n    amplitude,\n  }) {\n    const lineYInterpolation = lineIndex / (lines - 1);\n\n    p.beginShape();\n    for (let index = 0; index < lineSteps; index++) {\n      // From 0 to 1\n      const lineXInterpolation = index / (lineSteps - 1);\n\n      const x = p.lerp(0, p.width, lineXInterpolation);\n      let y = p.lerp(\n        lineYInterpolation * p.height,\n        lineYInterpolation * p.height,\n        lineXInterpolation\n      );\n\n      const noise = simplex.noise3D(\n        lineXInterpolation * frequency,\n        lineYInterpolation * frequency,\n        time\n      );\n\n      y += noise * amplitude;\n\n      const fromColor = p.color(222, 16, 134);\n      const toColor = p.color(50, 186, 234);\n      p.stroke(p.lerpColor(fromColor, toColor, noise));\n\n      p.vertex(x, y);\n    }\n    p.endShape();\n  };\n\n  p.setup = function () {\n    p.createCanvas(p.windowWidth, p.windowHeight);\n\n    // p.mouseX = p.width / 2;\n    // p.mouseY = p.height / 2;\n\n    if (navigator.requestMIDIAccess) {\n      navigator.requestMIDIAccess().then(onMIDISuccess, onMIDIFailure);\n\n      function onMIDISuccess(midiAccess) {\n        console.log(midiAccess);\n\n        for (var input of midiAccess.inputs.values()) {\n          input.onmidimessage = handleMidiInput(p);\n        }\n      }\n\n      function onMIDIFailure() {\n        console.log(\"Could not access your MIDI devices.\");\n      }\n    } else {\n      console.log(\"WebMIDI is not supported in this browser.\");\n    }\n\n    p.frameRate(30);\n  };\n\n  p.windowResized = function () {\n    p.resizeCanvas(p.windowWidth, p.windowHeight);\n  };\n\n  p.draw = function () {\n    p.background(0, 0, 0, configParams.backgroundFill.value);\n    p.noFill();\n    p.strokeWeight(configParams.strokeWeight.value);\n    const time = p.millis() / configParams.velocity.value;\n\n    const lines = configParams.lines.value;\n\n    // Uncomment code to activate mouse interaction\n    // const frequency = p.lerp(frequencyRange[0], frequencyRange[1], p.mouseX / p.width);\n    // const amplitude = p.lerp(amplitudeRange[0], amplitudeRange[1], p.mouseY / p.height);\n\n    for (let index = 0; index < lines; index++) {\n      p.drawNoiseLine({\n        lineIndex: index,\n        lines,\n        time: time * 0.5,\n        frequency: configParams.frequency.value,\n        amplitude: configParams.amplitude.value * p.height,\n      });\n    }\n  };\n}\n","import React from \"react\";\nimport P5Wrapper from \"react-p5-wrapper\";\nimport \"./App.css\";\n\nimport shader1 from \"./sketches/shader-1\";\nimport noiseMidi from \"./sketches/noise-midi\";\nimport noise from \"./sketches/noise\";\nimport mouse from \"./sketches/mouse\";\nimport loop from \"./sketches/loop\";\nimport blendMode from \"./sketches/blendMode\";\nimport shapes from \"./sketches/shapes\";\n\nconst sketches = [shader1, noiseMidi, noise, mouse, loop, blendMode, shapes];\n\nfunction App() {\n  const showButton = false;\n\n  const [currentSketch, setCurrentSketch] = React.useState(0);\n\n  const moveToNextSketch = React.useCallback(() => {\n    setCurrentSketch((currentSketch) =>\n      currentSketch + 1 >= sketches.length ? 0 : currentSketch + 1\n    );\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {showButton && (\n        <button className=\"next-btn\" onClick={moveToNextSketch}>\n          Current sketch: {currentSketch + 1}/{sketches.length} | Next >>\n        </button>\n      )}\n      <P5Wrapper sketch={sketches[currentSketch]} />\n    </div>\n  );\n}\n\nexport default App;\n","function getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nexport default function sketch(p) {\n  p.drawNoiseLine = function ({ lineIndex, lines }) {\n    const lineYInterpolation = lineIndex / (lines - 1);\n    const lineSteps = 10;\n\n    p.beginShape();\n    for (let index = 0; index < lineSteps; index++) {\n      // From 0 to 1\n      const lineXInterpolation = index / (lineSteps - 1);\n\n      const x = p.lerp(0, p.width, lineXInterpolation);\n      let y = p.lerp(0, p.height, lineYInterpolation);\n\n      y += getRandomInt(100);\n\n      p.vertex(x, y);\n    }\n    p.endShape();\n  };\n\n  p.setup = function () {\n    p.createCanvas(p.windowWidth, p.windowHeight);\n\n    p.mouseX = p.width / 2;\n    p.mouseY = p.height / 2;\n\n    p.frameRate(15);\n  };\n\n  p.windowResized = function () {\n    p.resizeCanvas(p.windowWidth, p.windowHeight);\n  };\n\n  p.draw = function () {\n    p.background(0);\n    p.noFill();\n    p.strokeWeight(1);\n    p.stroke(255);\n\n    const lines = 10;\n\n    for (let index = 0; index < lines; index++) {\n      p.drawNoiseLine({ lineIndex: index, lines });\n    }\n  };\n}\n","export default function sketch(p) {\n  p.setup = function () {\n    p.createCanvas(p.windowWidth, p.windowHeight);\n\n    p.mouseX = p.width / 2;\n    p.mouseY = p.height / 2;\n  };\n\n  p.windowResized = function () {\n    p.resizeCanvas(p.windowWidth, p.windowHeight);\n  };\n\n  p.draw = function () {\n    p.background(0);\n    p.noFill();\n    p.stroke(255);\n    p.strokeWeight(1);\n\n    const blockSize = 500;\n    const gridSize = 10;\n    const cellSize = blockSize / gridSize;\n\n    const gridStartX = p.width / 2 - blockSize / 2;\n    const gridStartY = p.height / 2 - blockSize / 2;\n\n    for (let y = 0; y < gridSize; y++) {\n      for (let x = 0; x < gridSize; x++) {\n        p.push();\n        p.stroke(255);\n        p.translate(\n          gridStartX + x * cellSize + cellSize / 2,\n          gridStartY + y * cellSize + cellSize / 2\n        );\n        console.log(\n          \"atan2:\",\n          p.mouseY - gridStartY + y * cellSize + cellSize / 2,\n          p.mouseX - gridStartX + x * cellSize + cellSize / 2\n        );\n        console.log(\"p.mouseY:\", p.mouseY);\n        console.log(\n          \"gridStartY + y * cellSize + cellSize / 2:\",\n          gridStartY + y * cellSize + cellSize / 2\n        );\n        p.rotate(\n          p.atan2(\n            p.mouseY - (gridStartY + y * cellSize + cellSize / 2),\n            p.mouseX - (gridStartX + x * cellSize + cellSize / 2)\n          )\n        );\n        p.line(\n          -cellSize * 0.25,\n          -cellSize * 0.25,\n          cellSize * 0.25,\n          cellSize * 0.25\n        );\n        p.pop();\n        p.stroke(255, 255, 255, 25);\n        p.rect(\n          gridStartX + x * cellSize,\n          gridStartY + y * cellSize,\n          cellSize,\n          cellSize\n        );\n      }\n    }\n  };\n}\n","export default function sketch(p) {\n  p.setup = function () {\n    p.createCanvas(p.windowWidth, p.windowHeight);\n  };\n\n  p.windowResized = function () {\n    p.resizeCanvas(p.windowWidth, p.windowHeight);\n  };\n\n  p.draw = function () {\n    const figures = 10;\n    p.background(0, 0, 0, 10);\n    p.noFill();\n    p.stroke(255);\n\n    const time = p.millis() / 1000;\n    const duration = 5;\n\n    // Center of the screen\n    const x = p.width / 2;\n    const y = p.height / 2;\n    const size = 50;\n\n    p.rectMode(p.CENTER); // https://p5js.org/reference/#/p5/rectMode\n\n    for (let index = 0; index < figures; index++) {\n      const playhead =\n        (time / duration + p.map(index, 0, figures - 1, 0, 1)) % 1;\n      const anim = p.sin(playhead * p.PI * 2);\n\n      const positiveAnim = anim * 0.5 + 0.5;\n\n      p.push();\n      p.strokeWeight(positiveAnim * 5);\n      p.translate(\n        x + anim * size * 5,\n        y + p.map(index, 0, figures - 1, -5, 5) * size\n      );\n      p.rotate(playhead * p.PI * 2 * index);\n      p.rect(0, 0, size, size, (positiveAnim * size) / 2);\n      p.pop();\n    }\n  };\n}\n","export default function sketch(p) {\n  p.setup = function () {\n    p.createCanvas(p.windowWidth, p.windowHeight);\n\n    p.noLoop();\n  };\n\n  p.windowResized = function () {\n    p.resizeCanvas(p.windowWidth, p.windowHeight);\n  };\n\n  p.draw = function () {\n    p.background(0);\n    p.fill(255);\n    p.blendMode(p.DIFFERENCE);\n\n    // Center of the screen\n    const x = p.width / 2;\n    const y = p.height / 2;\n    const size = 200;\n\n    p.rectMode(p.CENTER); // https://p5js.org/reference/#/p5/rectMode\n    p.ellipse(x, y, size, size);\n    p.translate(size / 2, 0);\n    p.ellipse(x, y, size, size);\n    p.translate(0, -size / 4);\n    p.rect(x, y, size, size);\n  };\n}\n","export default function sketch(p) {\n  p.setup = function () {\n    p.createCanvas(p.windowWidth, p.windowHeight);\n  };\n\n  p.windowResized = function () {\n    p.resizeCanvas(p.windowWidth, p.windowHeight);\n  };\n\n  p.draw = function () {\n    p.background(0);\n    p.noFill();\n    p.strokeJoin(p.ROUND); // https://p5js.org/reference/#/p5/strokeJoin\n    p.stroke(255);\n\n    // Make the stroke width relative to the canvas\n\n    const dim = p.min(p.width, p.height);\n    p.strokeWeight(dim * 0.0025);\n\n    // Center of the screen\n    const x = p.width / 2;\n    const y = p.height / 2;\n    const size = 200;\n\n    p.rectMode(p.CENTER); // https://p5js.org/reference/#/p5/rectMode\n    p.rect(x, y, size, size);\n    p.ellipse(x, y, size, size);\n    p.triangle(\n      x,\n      y - size / 2,\n      x - size / 2,\n      y + size / 2,\n      x + size / 2,\n      y + size / 2\n    );\n  };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}